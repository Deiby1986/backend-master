/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.6.1/userguide/java_library_plugin.html
 */

plugins {
    id 'org.springframework.boot' version '2.2.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java-library'
    id 'java'
}

apply plugin: 'java'
apply plugin: 'eclipse'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories { 
     mavenCentral()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:28.0-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    
	implementation 'org.springframework.boot:spring-boot-starter-web'
	
	testCompile('org.springframework.boot:spring-boot-starter-test')
	
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
				exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	
	
	compile 'com.orhanobut:logger:2.2.0'
	
	compile 'org.apache.camel:camel-core:2.8.3'
	
	
	
	annotationProcessor 'org.projectlombok:lombok'	
	implementation	'io.springfox:springfox-swagger-ui:2.9.2'
	implementation	'io.springfox:springfox-swagger2:2.9.2'	
	
	runtimeOnly 'mysql:mysql-connector-java'	
    
    implementation project(':backend-domain')
    
    implementation project(':backend-application')
}

test {
    useJUnitPlatform()
}
